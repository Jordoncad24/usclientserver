{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theco\\\\Documents\\\\websocket-clientserver\\\\websocket-client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport './App.css';\nimport RegionPage from './RegionPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:8080');\n    ws.onmessage = event => {\n      const receivedData = JSON.parse(event.data);\n      setData(receivedData);\n    };\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    ws.onerror = () => {\n      console.log('WebSocket error');\n    };\n    return () => {\n      ws.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"DevOps Monitoring Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), data.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"region-links\",\n          children: data.map(regionData => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/region/${regionData.region}`,\n            className: \"region-button\",\n            children: regionData.region.toUpperCase()\n          }, regionData.region, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/region/:regionId\",\n          element: /*#__PURE__*/_jsxDEV(RegionPage, {\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","Link","RegionPage","jsxDEV","_jsxDEV","App","_s","data","setData","ws","WebSocket","onmessage","event","receivedData","JSON","parse","onclose","console","log","onerror","close","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","regionData","to","region","toUpperCase","path","element","_c","$RefreshReg$"],"sources":["C:/Users/theco/Documents/websocket-clientserver/websocket-client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport './App.css';\nimport RegionPage from './RegionPage';\n\ninterface RegionData {\n  status: string;\n  region: string;\n  results: {\n    services: {\n      redis: boolean;\n      database: boolean;\n    };\n    stats: {\n      servers_count: number;\n      online: number;\n      session: number;\n      server: {\n        active_connections: number;\n        wait_time: number;\n        workers: [string, {\n          wait_time: number;\n          workers: number;\n          waiting: number;\n          idle: number;\n          time_to_return: number;\n          recently_blocked_keys: [string, number, string][];\n          top_keys: [string, number][];\n        }][];\n        cpu_load: number;\n        timers: number;\n      };\n    };\n  };\n  lastChecked: string;\n}\n\nconst App: React.FC = () => {\n  const [data, setData] = useState<RegionData[]>([]);\n\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:8080');\n\n    ws.onmessage = (event) => {\n      const receivedData: RegionData[] = JSON.parse(event.data);\n      setData(receivedData);\n    };\n\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n\n    ws.onerror = () => {\n      console.log('WebSocket error');\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>DevOps Monitoring Dashboard</h1>\n          {data.length > 0 ? (\n            <div className=\"region-links\">\n              {data.map((regionData) => (\n                <Link key={regionData.region} to={`/region/${regionData.region}`} className=\"region-button\">\n                  {regionData.region.toUpperCase()}\n                </Link>\n              ))}\n            </div>\n          ) : (\n            <p>Loading data...</p>\n          )}\n        </header>\n        <Routes>\n          <Route\n            path=\"/region/:regionId\"\n            element={<RegionPage data={data} />}\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}