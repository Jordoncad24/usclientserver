{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\theco\\\\Documents\\\\websocket-clientserver\\\\websocket-client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport './App.css';\nimport RegionPage from './RegionPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:8080');\n    ws.onmessage = event => {\n      try {\n        const receivedData = JSON.parse(event.data);\n        setData(receivedData);\n        setError(null); // Clear any previous errors\n      } catch (err) {\n        setError('Failed to parse the data received from the server.');\n        console.error('Data parsing error:', err);\n      }\n    };\n    ws.onclose = () => {\n      console.log('WebSocket connection closed');\n      setError('WebSocket connection closed. Please refresh the page to try reconnecting.');\n    };\n    ws.onerror = () => {\n      console.log('WebSocket error');\n      setError('An error occurred with the WebSocket connection. Please try again later.');\n    };\n    return () => {\n      ws.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"DevOps Monitoring Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this) : data.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"region-links\",\n          children: data.map(regionData => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/region/${regionData.region}`,\n            className: \"region-button\",\n            children: regionData.region.toUpperCase()\n          }, regionData.region, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/region/:regionId\",\n          element: /*#__PURE__*/_jsxDEV(RegionPage, {\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nD7edIDRwNLC+/bSdKREAvtAsyY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","Link","RegionPage","jsxDEV","_jsxDEV","App","_s","data","setData","error","setError","ws","WebSocket","onmessage","event","receivedData","JSON","parse","err","console","onclose","log","onerror","close","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","regionData","to","region","toUpperCase","path","element","_c","$RefreshReg$"],"sources":["C:/Users/theco/Documents/websocket-clientserver/websocket-client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\r\nimport './App.css';\r\nimport RegionPage from './RegionPage';\r\n\r\ninterface RegionData {\r\n  status: string;\r\n  region: string;\r\n  results: {\r\n    services: {\r\n      redis: boolean;\r\n      database: boolean;\r\n    };\r\n    stats: {\r\n      servers_count: number;\r\n      online: number;\r\n      session: number;\r\n      server: {\r\n        active_connections: number;\r\n        wait_time: number;\r\n        workers: [string, {\r\n          wait_time: number;\r\n          workers: number;\r\n          waiting: number;\r\n          idle: number;\r\n          time_to_return: number;\r\n          recently_blocked_keys: [string, number, string][];\r\n          top_keys: [string, number][];\r\n        }][];\r\n        cpu_load: number;\r\n        timers: number;\r\n      };\r\n    };\r\n  };\r\n  lastChecked: string;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [data, setData] = useState<RegionData[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const ws = new WebSocket('ws://localhost:8080');\r\n\r\n    ws.onmessage = (event) => {\r\n      try {\r\n        const receivedData: RegionData[] = JSON.parse(event.data);\r\n        setData(receivedData);\r\n        setError(null); // Clear any previous errors\r\n      } catch (err) {\r\n        setError('Failed to parse the data received from the server.');\r\n        console.error('Data parsing error:', err);\r\n      }\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log('WebSocket connection closed');\r\n      setError('WebSocket connection closed. Please refresh the page to try reconnecting.');\r\n    };\r\n\r\n    ws.onerror = () => {\r\n      console.log('WebSocket error');\r\n      setError('An error occurred with the WebSocket connection. Please try again later.');\r\n    };\r\n\r\n    return () => {\r\n      ws.close();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1>DevOps Monitoring Dashboard</h1>\r\n          {error ? (\r\n            <p className=\"error-message\">{error}</p>\r\n          ) : data.length > 0 ? (\r\n            <div className=\"region-links\">\r\n              {data.map((regionData) => (\r\n                <Link key={regionData.region} to={`/region/${regionData.region}`} className=\"region-button\">\r\n                  {regionData.region.toUpperCase()}\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p>Loading data...</p>\r\n          )}\r\n        </header>\r\n        <Routes>\r\n          <Route\r\n            path=\"/region/:regionId\"\r\n            element={<RegionPage data={data} />}\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}