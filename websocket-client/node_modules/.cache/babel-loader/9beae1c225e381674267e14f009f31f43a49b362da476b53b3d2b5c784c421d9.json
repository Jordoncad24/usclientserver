{"ast":null,"code":"import React from'react';import{useParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RegionPage=_ref=>{let{data}=_ref;const{regionId}=useParams();const regionData=data.find(region=>region.region===regionId);if(!regionData){return/*#__PURE__*/_jsx(\"p\",{children:\"Region not found\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"region-status\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Region: \",regionData.region.toUpperCase()]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",/*#__PURE__*/_jsx(\"span\",{className:`status-${regionData.status.toLowerCase()}`,children:regionData.status})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Last Checked: \",new Date(regionData.lastChecked).toLocaleString()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"services\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Services Status\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Redis: \",regionData.results.services.redis?'Online':'Offline']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Database: \",regionData.results.services.database?'Online':'Offline']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"server-stats\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Server Stats\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Servers Count: \",regionData.results.stats.servers_count]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Online: \",regionData.results.stats.online]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Sessions: \",regionData.results.stats.session]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Active Connections: \",regionData.results.stats.server.active_connections]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"CPU Load: \",regionData.results.stats.server.cpu_load*100,\"%\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Timers: \",regionData.results.stats.server.timers]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"worker-stats\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Worker Stats\"}),regionData.results.stats.server.workers.map(_ref2=>{let[name,stats]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"worker\",children:[/*#__PURE__*/_jsx(\"h4\",{children:name.replace(/_/g,' ').toUpperCase()}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Workers: \",stats.workers]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Waiting: \",stats.waiting]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Idle: \",stats.idle]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Wait Time: \",stats.wait_time,\" ms\"]}),/*#__PURE__*/_jsx(\"h5\",{children:\"Top Keys\"}),/*#__PURE__*/_jsx(\"ul\",{children:stats.top_keys.map(_ref3=>{let[key,value]=_ref3;return/*#__PURE__*/_jsxs(\"li\",{children:[key,\": \",value]},key);})}),/*#__PURE__*/_jsx(\"h5\",{children:\"Recently Blocked Keys\"}),/*#__PURE__*/_jsx(\"ul\",{children:stats.recently_blocked_keys.map(_ref4=>{let[key,count,timestamp]=_ref4;return/*#__PURE__*/_jsxs(\"li\",{children:[key,\" - \",count,\" times (Last Blocked: \",new Date(timestamp).toLocaleString(),\")\"]},key);})})]},name);})]})]});};export default RegionPage;","map":{"version":3,"names":["React","useParams","jsx","_jsx","jsxs","_jsxs","RegionPage","_ref","data","regionId","regionData","find","region","children","className","toUpperCase","status","toLowerCase","Date","lastChecked","toLocaleString","results","services","redis","database","stats","servers_count","online","session","server","active_connections","cpu_load","timers","workers","map","_ref2","name","replace","waiting","idle","wait_time","top_keys","_ref3","key","value","recently_blocked_keys","_ref4","count","timestamp"],"sources":["C:/Users/theco/Documents/websocket-clientserver/websocket-client/src/RegionPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\ninterface WorkerStats {\r\n  wait_time: number;\r\n  workers: number;\r\n  waiting: number;\r\n  idle: number;\r\n  time_to_return: number;\r\n  recently_blocked_keys: [string, number, string][];\r\n  top_keys: [string, number][];\r\n}\r\n\r\ninterface ServerStats {\r\n  active_connections: number;\r\n  wait_time: number;\r\n  workers: [string, WorkerStats][];\r\n  cpu_load: number;\r\n  timers: number;\r\n}\r\n\r\ninterface ResultData {\r\n  services: {\r\n    redis: boolean;\r\n    database: boolean;\r\n  };\r\n  stats: {\r\n    servers_count: number;\r\n    online: number;\r\n    session: number;\r\n    server: ServerStats;\r\n  };\r\n}\r\n\r\ninterface RegionData {\r\n  status: string;\r\n  region: string;\r\n  results: ResultData;\r\n  lastChecked: string;\r\n}\r\n\r\ninterface RegionPageProps {\r\n  data: RegionData[];\r\n}\r\n\r\nconst RegionPage: React.FC<RegionPageProps> = ({ data }) => {\r\n  const { regionId } = useParams<{ regionId: string }>();\r\n  const regionData = data.find((region) => region.region === regionId);\r\n\r\n  if (!regionData) {\r\n    return <p>Region not found</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"region-status\">\r\n      <h2>Region: {regionData.region.toUpperCase()}</h2>\r\n      <p>Status: <span className={`status-${regionData.status.toLowerCase()}`}>{regionData.status}</span></p>\r\n      <p>Last Checked: {new Date(regionData.lastChecked).toLocaleString()}</p>\r\n      <div className=\"services\">\r\n        <h3>Services Status</h3>\r\n        <p>Redis: {regionData.results.services.redis ? 'Online' : 'Offline'}</p>\r\n        <p>Database: {regionData.results.services.database ? 'Online' : 'Offline'}</p>\r\n      </div>\r\n      <div className=\"server-stats\">\r\n        <h3>Server Stats</h3>\r\n        <p>Servers Count: {regionData.results.stats.servers_count}</p>\r\n        <p>Online: {regionData.results.stats.online}</p>\r\n        <p>Sessions: {regionData.results.stats.session}</p>\r\n        <p>Active Connections: {regionData.results.stats.server.active_connections}</p>\r\n        <p>CPU Load: {regionData.results.stats.server.cpu_load * 100}%</p>\r\n        <p>Timers: {regionData.results.stats.server.timers}</p>\r\n      </div>\r\n      <div className=\"worker-stats\">\r\n        <h3>Worker Stats</h3>\r\n        {regionData.results.stats.server.workers.map(([name, stats]) => (\r\n          <div key={name} className=\"worker\">\r\n            <h4>{name.replace(/_/g, ' ').toUpperCase()}</h4>\r\n            <p>Workers: {stats.workers}</p>\r\n            <p>Waiting: {stats.waiting}</p>\r\n            <p>Idle: {stats.idle}</p>\r\n            <p>Wait Time: {stats.wait_time} ms</p>\r\n            <h5>Top Keys</h5>\r\n            <ul>\r\n              {stats.top_keys.map(([key, value]) => (\r\n                <li key={key}>{key}: {value}</li>\r\n              ))}\r\n            </ul>\r\n            <h5>Recently Blocked Keys</h5>\r\n            <ul>\r\n              {stats.recently_blocked_keys.map(([key, count, timestamp]) => (\r\n                <li key={key}>{key} - {count} times (Last Blocked: {new Date(timestamp).toLocaleString()})</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegionPage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}